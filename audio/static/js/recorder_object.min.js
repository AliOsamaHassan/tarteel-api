var audio_context,recorder,audioStream;let meter;const isMobile=new MobileDetect(window.navigator.userAgent);// Handles the animation of the mic button while recording based on the voice volume.
function drawLoop(){$("#mic").css("transform",`scale(${1+ +parseFloat(meter.volume).toFixed(2)})`),rafID=window.requestAnimationFrame(drawLoop)}function stopRecording(){recorder.stop(),meter.shutdown(),audioStream.getTracks()[0].stop()}function startRecording(a){function b(b){audioStream=b;var c=audio_context.createMediaStreamSource(audioStream);meter=createAudioMeter(audio_context),c.connect(meter),drawLoop(),a&&a(),recorder=new Recorder(c),recorder&&recorder.record()}try{// webkit shim.
window.AudioContext=window.AudioContext||window.webkitAudioContext,navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia,window.URL=window.URL||window.webkitURL,audio_context||(audio_context=new AudioContext),console.log("Audio context set up."),console.log("navigator.getUserMedia "+(navigator.getUserMedia?"available.":"not present!"))}catch(a){console.log("No web audio support in this browser!")}try{navigator.mediaDevices.getUserMedia({audio:!0}).then(b).catch(a=>{a&&(showRecordingPermissionsError(),continuous&&revertContinuous())})}catch(a){showRecordingPermissionsError()}}function showRecordingPermissionsError(){isMobile.os()?$(".mobile-app").show():$(".mic-permissions-blocked").show()}function revertContinuous(){state=StateEnum.AYAH_LOADED,$("#mic").removeClass("recording"),$(".review #submit").css("margin-top","35px"),$(".note-button.next").show(),$(".note-button.previous").show(),$(".tg-list-item").show(),$("#retry").show(),$(".review").hide(),$(".recording-note").hide()}
